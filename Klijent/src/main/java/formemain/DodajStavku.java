/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package formemain;

import domenskeKlase.Knjiga;
import domenskeKlase.Stavka;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import klijentkontroler.KlijentKontroler;

/**
 * Forma za dodavanje stavke narudzbenice
 * 
 * @author Irena Zivkovic
 */
public class DodajStavku extends javax.swing.JDialog {

    /**
     * Creates new form DodajStavku
     */
    public DodajStavku(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        setTitle("Dodaj stavku");
        popuniKnjige();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbKnjiga = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        txtKolicina = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbPdv = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        lblStanje = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Knjiga:");

        cmbKnjiga.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbKnjiga.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbKnjigaItemStateChanged(evt);
            }
        });

        jLabel2.setText("Kolicina:");

        txtKolicina.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel3.setText("PDV (%)");

        cmbPdv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5", "10", "20" }));

        jButton1.setText("Dodaj stavku");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblStanje.setText("jLabel4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(cmbPdv, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbKnjiga, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(lblStanje)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbKnjiga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblStanje)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbPdv, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jButton1)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metoda koja suzi za dodavanje stavke. 
     * Getuje sve parametre sa forme i kreira objekat klase Stavka koji prosledjuje klijentskoj formi.
     * 
     * @param evt  Objekat koji predstavlja dogadjaj klika na dugme.
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (txtKolicina.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Kolicina je obavezno polje!");
        }
        if (Integer.parseInt(txtKolicina.getText()) <= 0) {
            JOptionPane.showMessageDialog(this, "Kolicina mora biti veca od 0!");
            return;
        }
        Knjiga k = (Knjiga) cmbKnjiga.getSelectedItem();
        if (Integer.parseInt(txtKolicina.getText()) > k.getStanje()) {
            JOptionPane.showMessageDialog(this, "Kolicina ne sme biti veca od raspolozivog stanja!");
            return;
        }
        Stavka s = new Stavka(null, (Knjiga) cmbKnjiga.getSelectedItem(), -1, Integer.parseInt(txtKolicina.getText()), -1, Double.parseDouble((String) cmbPdv.getSelectedItem()));

        if (getParent() instanceof KlijentskaForma) {
            KlijentskaForma kf = (KlijentskaForma) getParent();
            if (!kf.postoji(s)) {
                kf.dodaj(s);
            } else {
                JOptionPane.showMessageDialog(this, "Vec uneta knjiga. Ukoliko zelite da azurirate kolicinu, molim vas da obrisete stavku i opet je unesete");
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Metoda koja postavlja knjigu na izabranu knjigu iz comboboxa.
     * 
     * @param evt  Objekat koji predstavlja dogadjaj klika na dugme.
     */
    private void cmbKnjigaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbKnjigaItemStateChanged

        Knjiga k = (Knjiga) cmbKnjiga.getSelectedItem();
        if (k != null) {
            lblStanje.setText("Raspolozivo stanje knjige: " + k.getStanje() + " komada");
        }
    }//GEN-LAST:event_cmbKnjigaItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DodajStavku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DodajStavku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DodajStavku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DodajStavku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DodajStavku dialog = new DodajStavku(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbKnjiga;
    private javax.swing.JComboBox<String> cmbPdv;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblStanje;
    private javax.swing.JFormattedTextField txtKolicina;
    // End of variables declaration//GEN-END:variables

    /**
     * Metoda kojom se popunjava combobox sa knjigama koje se nalaze u bazi
     */
    private void popuniKnjige() {
        try {
            ArrayList<Knjiga> lista = KlijentKontroler.getInstance().getAllKnjiga();
            if (lista.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nema raspolozivih knjiga!");
                return;
            }
            cmbKnjiga.removeAllItems();
            for (Knjiga knjiga : lista) {
                if (knjiga.getStanje() > 0) {
                    cmbKnjiga.addItem(knjiga);
                }
            }
            Knjiga k = (Knjiga) cmbKnjiga.getSelectedItem();
            lblStanje.setText("Raspolozivo stanje knjige: " + k.getStanje() + " komada");
        } catch (Exception ex) {
            Logger.getLogger(DodajStavku.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
